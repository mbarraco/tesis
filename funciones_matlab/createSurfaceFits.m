function [fitresult, gof] = createSurfaceFits(x, y, z)
%CREATESURFACEFITS(X,Y,Z)
%  Fit surfaces to data.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Data for 'untitled fit 2' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Data for 'untitled fit 3' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Output:
%      fitresult : a cell-array of sfit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, SFIT.

%  Auto-generated by MATLAB on 14-Feb-2012 20:20:31

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 3, 1 );
gof = struct( 'sse', cell( 3, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'untitled fit 1'.
[xInput, yInput, zOutput] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'poly33' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf];
opts.Robust = 'Bisquare';
opts.Upper = [Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( [xInput, yInput], zOutput, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult{1}, [xInput, yInput], zOutput );
legend( h, 'untitled fit 1', 'z vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x' );
ylabel( 'y' );
zlabel( 'z' );
grid on
view( -24.5, 24 );

%% Fit: 'untitled fit 2'.
[xInput, yInput, zOutput] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'biharmonicinterp' );
opts = fitoptions( ft );
opts.Normalize = 'on';

% Fit model to data.
[fitresult{2}, gof(2)] = fit( [xInput, yInput], zOutput, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 2' );
h = plot( fitresult{2}, [xInput, yInput], zOutput );
legend( h, 'untitled fit 2', 'z vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x' );
ylabel( 'y' );
zlabel( 'z' );
grid on
view( 190.5, 46 );

%% Fit: 'untitled fit 3'.
[xInput, yInput, zOutput] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = 'cubicinterp';
opts = fitoptions( ft );
opts.Normalize = 'on';

% Fit model to data.
[fitresult{3}, gof(3)] = fit( [xInput, yInput], zOutput, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 3' );
h = plot( fitresult{3}, [xInput, yInput], zOutput );
legend( h, 'untitled fit 3', 'z vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel( 'x' );
ylabel( 'y' );
zlabel( 'z' );
grid on
view( -89.5, 20 );


